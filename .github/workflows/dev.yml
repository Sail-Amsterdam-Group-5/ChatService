name: Build, Test, Lint, and Update ArgoCD

on:
  push:
    branches:
      - dev
    paths:
      - '**.cs'
      - 'openshift/deployment.yml'
  pull_request:
    branches:
      - dev
    types:
      - opened
      - reopened
      - synchronize

jobs:
  # Linting Job
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0' # Adjust this to your .NET version

    - name: Run Linter
      run: dotnet format --verify-no-changes
      continue-on-error: true # Prevents breaking on linting issues but reports them

  # Testing Job
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0' # Adjust this to your .NET version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --verbosity normal

  # Deployment Job
  deploy:
    needs: [lint, test] # Ensures this job runs only after linting and testing succeed
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 6: Log in to Docker Hub (or your preferred registry)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Build and Push Docker Image
    - name: Build and push Docker image
      run: |
        docker build -t earlybirdreal/sail-chat-api:${{ github.sha }} .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push earlybirdreal/sail-chat-api:${{ github.sha }}

    # Step 9: Commit and push changes to the branch ArgoCD monitors
    - name: Commit and push changes
      run: |
        cd openshift
        sed -i "s|image: earlybirdreal/sail-chat-api:.*|image: earlybirdreal/sail-chat-api:${{ github.sha }}|" deployment.yml
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add deployment.yml
        git commit -m "Update deployment.yml"
        git push
